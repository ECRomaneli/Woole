name: Build, Test and Release

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            osName: linux
            arch: x64
          - os: windows-latest
            osName: windows
            arch: x64
            extension: .exe
          - os: macos-14
            osName: darwin
            arch: arm64
          - os: macos-13
            osName: darwin
            arch: x64
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go 1.24
        uses: actions/setup-go@v4
        with:
          go-version: 1.24

      # Build
      - name: Build Client
        working-directory: ./cmd/client
        run: |
          go build -o client${{ matrix.extension }} .
          ./client${{ matrix.extension }} --help

      - name: Build Server
        working-directory: ./cmd/server
        run: |
          go build -o server${{ matrix.extension }} .
          ./server${{ matrix.extension }} --help

      # Create ZIP file
      - name: Zip binaries (Unix)
        if: runner.os != 'Windows'
        run: |
          zip -j woole-${{ matrix.osName }}-${{ matrix.arch }}.zip ./cmd/client/client ./cmd/server/server

      - name: Zip binaries (Windows)
        if: runner.os == 'Windows'
        run: |
          Compress-Archive -Path (Resolve-Path ./cmd/client/client.exe), (Resolve-Path ./cmd/server/server.exe) -DestinationPath "woole-${{ matrix.osName }}-${{ matrix.arch }}.zip"

      # Upload ZIP to release
      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: woole-${{ matrix.osName }}-${{ matrix.arch }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
